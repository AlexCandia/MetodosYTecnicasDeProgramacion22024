/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyectofinal.Interfaz;

import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Camila
 */
public class Provedor extends javax.swing.JFrame {
    FondoPanel fondo = new FondoPanel();

    /**
     * Creates new form Provedor
     */
    public Provedor() {
        this.setContentPane(fondo);
        initComponents();
        this.setLocationRelativeTo(null);
        tablita.setModel(new DefaultTableModel(
        new Object[][] {}, // Lista vacía para evitar filas por defecto
        new String[] {"Nombre", "Teléfono", "Dirección"}
    ));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new FondoPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablita = new javax.swing.JTable();
        agregarProv = new javax.swing.JButton();
        eliminarProv = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        Cerrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(1857, 840));

        tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Telefono", "Direccion"
            }
        ));
        tablita.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tablita);

        agregarProv.setBackground(new java.awt.Color(153, 153, 255));
        agregarProv.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        agregarProv.setForeground(new java.awt.Color(255, 255, 255));
        agregarProv.setText("Agregar");
        agregarProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarProvActionPerformed(evt);
            }
        });

        eliminarProv.setBackground(new java.awt.Color(153, 153, 255));
        eliminarProv.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        eliminarProv.setForeground(new java.awt.Color(255, 255, 255));
        eliminarProv.setText("Eliminar");
        eliminarProv.setAutoscrolls(true);
        eliminarProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarProvActionPerformed(evt);
            }
        });

        editar.setBackground(new java.awt.Color(153, 153, 255));
        editar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        editar.setForeground(new java.awt.Color(255, 255, 255));
        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        Cerrar.setBackground(new java.awt.Color(0, 204, 204));
        Cerrar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Cerrar.setForeground(new java.awt.Color(255, 255, 255));
        Cerrar.setText("Ventas");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Provedor");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(139, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(742, 742, 742)
                                .addComponent(Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(eliminarProv, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(90, 90, 90)
                                    .addComponent(agregarProv, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(82, 82, 82)
                                    .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(72, 72, 72))))))
                .addContainerGap(591, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(agregarProv, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(eliminarProv, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Cerrar)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarProvActionPerformed
         DefaultTableModel model = (DefaultTableModel) tablita.getModel();

    // Pedir al usuario que ingrese el nombre
    String nombre = JOptionPane.showInputDialog("Ingrese el nombre del proveedor:");

    // Crear un ciclo para validar el teléfono
    String telefonoStr = null;
    boolean telefonoValido = false;
    while (!telefonoValido) {
        telefonoStr = JOptionPane.showInputDialog("Ingrese el teléfono del proveedor:");
        try {
            Integer.parseInt(telefonoStr); // Intentamos convertir el teléfono a int
            telefonoValido = true; // Si es válido, salir del ciclo
        } catch (NumberFormatException e) {
            // Si no es un número, mostramos un mensaje de error
            JOptionPane.showMessageDialog(this, "Debe colocar solo números en el campo de teléfono.");
        }
    }

    // Pedir la dirección
    String direccion = JOptionPane.showInputDialog("Ingrese la dirección del proveedor:");

    // Agregar una nueva fila con los datos ingresados si todo es válido
    if (nombre != null && telefonoStr != null && direccion != null) {
        model.addRow(new Object[]{nombre, Integer.parseInt(telefonoStr), direccion});
    }
    }//GEN-LAST:event_agregarProvActionPerformed

    private void eliminarProvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarProvActionPerformed
        int selectedRow = tablita.getSelectedRow();

    // Verificar que haya una fila seleccionada
        if (selectedRow >= 0) {
            // Mostrar cuadro de confirmación
            int confirm = JOptionPane.showConfirmDialog(this, 
                    "¿Estás seguro de que deseas eliminar este proveedor?", 
                    "Confirmar eliminación", 
                    JOptionPane.YES_NO_OPTION);

        // Si el usuario selecciona "Sí", eliminar la fila
            if (confirm == JOptionPane.YES_OPTION) {
                DefaultTableModel model = (DefaultTableModel) tablita.getModel();
                model.removeRow(selectedRow);
            }
        } else {
        // Mostrar mensaje si no se ha seleccionado ninguna fila
            JOptionPane.showMessageDialog(this, "Selecciona un proveedor para eliminar.");
        }
    }//GEN-LAST:event_eliminarProvActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
         int selectedRow = tablita.getSelectedRow();

        if (selectedRow >= 0) {
            // Obtener los valores actuales de la fila seleccionada
            String nombre = (String) tablita.getValueAt(selectedRow, 0);
            String telefono = (String) tablita.getValueAt(selectedRow, 1).toString();
            String direccion = (String) tablita.getValueAt(selectedRow, 2);

            // Crear opciones para editar solo el nombre, teléfono, dirección o todo
            String[] opciones = {"Nombre", "Teléfono", "Dirección", "Todo"};
            String opcion = (String) JOptionPane.showInputDialog(this, 
                    "¿Qué desea editar?", "Seleccionar campo", 
                    JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);

            if (opcion != null) {
                // Editar el campo correspondiente
                if (opcion.equals("Nombre") || opcion.equals("Todo")) {
                    nombre = JOptionPane.showInputDialog("Nuevo nombre:", nombre);
                }
                if (opcion.equals("Teléfono") || opcion.equals("Todo")) {
                    boolean telefonoValido = false;
                    while (!telefonoValido) {
                        String nuevoTelefonoStr = JOptionPane.showInputDialog("Nuevo teléfono:", telefono);
                        try {
                            Integer.parseInt(nuevoTelefonoStr); // Intentamos convertirlo a int
                            telefono = nuevoTelefonoStr;
                            telefonoValido = true;
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(this, "El teléfono debe ser un número entero.");
                        }
                    }
                }
                if (opcion.equals("Dirección") || opcion.equals("Todo")) {
                    direccion = JOptionPane.showInputDialog("Nueva dirección:", direccion);
                }

                // Actualizar la fila con los nuevos datos
                DefaultTableModel model = (DefaultTableModel) tablita.getModel();
                model.setValueAt(nombre, selectedRow, 0);
                model.setValueAt(telefono, selectedRow, 1);
                model.setValueAt(direccion, selectedRow, 2);
            }
        } else {
            // Mostrar un mensaje si no se seleccionó ninguna fila
            JOptionPane.showMessageDialog(this, "Selecciona un proveedor para editar.");
        }
    }//GEN-LAST:event_editarActionPerformed

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_CerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Provedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Provedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Provedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Provedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Provedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cerrar;
    private javax.swing.JButton agregarProv;
    private javax.swing.JButton editar;
    private javax.swing.JButton eliminarProv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablita;
    // End of variables declaration//GEN-END:variables

    class FondoPanel extends JPanel{
        private Image imagen;
        public void paint(Graphics g){
            imagen = new ImageIcon(getClass().getResource("/imagen/fondoBlanco.jpg")).getImage();
            g.drawImage(imagen,0,0,getWidth(), getHeight(),this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
