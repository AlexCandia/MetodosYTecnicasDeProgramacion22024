import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

// Clase para las transacciones (ingresos)
class Ingreso {
    private String categoria;
    private double monto;
    private Date fecha;

    public Ingreso(String categoria, double monto, Date fecha) {
        this.categoria = categoria;
        this.monto = monto;
        this.fecha = fecha;
    }

    public String getCategoria() {
        return categoria;
    }

    public double getMonto() {
        return monto;
    }

    public Date getFecha() {
        return fecha;
    }
}

// Clase ReporteFinanciero
public class ReporteFinanciero {

    private List<Ingreso> ingresos;
    private List<EgresoFijo> egresosFijos;
    private List<EgresoVariableInsumo> egresosVariablesInsumo;
    private List<EgresoVariableOtro> egresosVariablesOtro;

    public ReporteFinanciero() {
        ingresos = new ArrayList<>();
        egresosFijos = new ArrayList<>();
        egresosVariablesInsumo = new ArrayList<>();
        egresosVariablesOtro = new ArrayList<>();
    }

    // Método para agregar ingresos
    public void agregarIngreso(String categoria, double monto, Date fecha) {
        ingresos.add(new Ingreso(categoria, monto, fecha));
    }

    // Método para agregar egreso fijo
    public void agregarEgresoFijo(String nombre, double valor) {
        egresosFijos.add(new EgresoFijo(nombre, valor));
    }

    // Método para agregar egreso variable de insumo
    public void agregarEgresoVariableInsumo(String nombre, int cantidad, double valor) {
        egresosVariablesInsumo.add(new EgresoVariableInsumo(nombre, cantidad, valor));
    }

    // Método para agregar egreso variable otro
    public void agregarEgresoVariableOtro(String nombre, String detalle, double valor) {
        egresosVariablesOtro.add(new EgresoVariableOtro(nombre, detalle, valor));
    }

    // Método para calcular el total de ingresos
    public double calcularTotalIngresos() {
        return ingresos.stream().mapToDouble(Ingreso::getMonto).sum();
    }

    // Método para calcular el total de egresos fijos
    public double calcularTotalEgresosFijos() {
        return egresosFijos.stream().mapToDouble(EgresoFijo::getValor).sum();
    }

    // Método para calcular el total de egresos variables de insumos
    public double calcularTotalEgresosVariablesInsumo() {
        return egresosVariablesInsumo.stream().mapToDouble(egreso -> egreso.getValor() * egreso.getCantidad()).sum();
    }

    // Método para calcular el total de egresos variables otros
    public double calcularTotalEgresosVariablesOtro() {
        return egresosVariablesOtro.stream().mapToDouble(EgresoVariableOtro::getValor).sum();
    }

    // Método para calcular el balance total (ingresos - egresos)
    public double calcularBalance() {
        double totalIngresos = calcularTotalIngresos();
        double totalEgresos = calcularTotalEgresosFijos() + calcularTotalEgresosVariablesInsumo() + calcularTotalEgresosVariablesOtro();
        return totalIngresos - totalEgresos;
    }

    // Método para generar reporte en archivo CSV
    public void generarReporteCSV(String nombreArchivo) throws IOException {
        FileWriter csvWriter = new FileWriter(nombreArchivo);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        csvWriter.append("Tipo, Categoria, Monto, Fecha/Cantidad/Detalle\n");

        for (Ingreso ingreso : ingresos) {
            csvWriter.append("Ingreso,")
                    .append(ingreso.getCategoria()).append(",")
                    .append(String.valueOf(ingreso.getMonto())).append(",")
                    .append(dateFormat.format(ingreso.getFecha())).append("\n");
        }

        for (EgresoFijo egresoFijo : egresosFijos) {
            csvWriter.append("Egreso Fijo,")
                    .append(egresoFijo.getNombreEgreso()).append(",")
                    .append(String.valueOf(egresoFijo.getValor())).append("\n");
        }

        for (EgresoVariableInsumo egresoInsumo : egresosVariablesInsumo) {
            csvWriter.append("Egreso Variable Insumo,")
                    .append(egresoInsumo.getNombre()).append(",")
                    .append(String.valueOf(egresoInsumo.getValor())).append(",")
                    .append("Cantidad: ").append(String.valueOf(egresoInsumo.getCantidad())).append("\n");
        }

        for (EgresoVariableOtro egresoOtro : egresosVariablesOtro) {
            csvWriter.append("Egreso Variable Otro,")
                    .append(egresoOtro.getNombre()).append(",")
                    .append(String.valueOf(egresoOtro.getValor())).append(",")
                    .append(egresoOtro.getDetalle()).append("\n");
        }

        csvWriter.append("Balance, ,").append(String.valueOf(calcularBalance())).append("\n");

        csvWriter.flush();
        csvWriter.close();
    }
}
